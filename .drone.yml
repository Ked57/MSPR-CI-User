.add_ssh: &add_ssh |
  mkdir ~/.ssh
  echo $SSH_KEY > ~/.ssh/id_rsa
  chmod 600 ~/.ssh/id_rsa
  ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts


kind: pipeline
type: kubernetes
name: default

services:
  - name: postgres
    image: postgres
    ports:
      - 5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres

steps:
  - name: install_dependencies
    image: node:12
    commands:
      - npm ci
  - name: prisma_generate
    image: node:12
    commands:
      - npx prisma2 migrate up --experimental
      - npx prisma2 generate
    environment:
      DATABASE_URL:
        from_secret: TEST_DATABASE_URL
    depends_on: [install_dependencies, postgres]
  - name: check_format
    image: node:12
    commands:
      - npm run format:check
    depends_on: [prisma_generate]
  - name: lint
    image: node:12
    commands:
      - npm run lint
    depends_on: [prisma_generate]
  - name: unit-test
    image: node:12
    commands:
      - npm run test:unit:ci
    depends_on: [prisma_generate, postgres, lint, check_format]
  - name: integration-test
    image: node:12
    commands:
      - npm run test:integration:ci
    depends_on: [unit-test]
  # - name: coverage-check
  #   image: node:12
  #   commands:
  #     - npm run coverage:check
  #   environment:
  #     DATABASE_URL:
  #       from_secret: TEST_DATABASE_URL
  #   depends_on: [integration-test]
  - name: coverage-send
    image: node:12
    commands:
      - cat $COVERALLS_TOKEN_FILE > .coveralls.yml
      - npm run coverage:send
    environment:
      COVERALLS_TOKEN_FILE:
        from_secret: COVERALLS_TOKEN_FILE
    depends_on: [integration-test]
  - name: build
    image: node:12
    commands:
      - npm run build
    depends_on: [integration-test]
  - name: documentation
    image: node:12
    commands:
      - npm run doc
      - *add_ssh
      - git fetch --tags
      - VERSION=$(git describe --abbrev=0 --tag | tr -d '\n')
      - git clone $DOC_REPOSITORY_URL doc-git
      - rm -rf doc-git/docs
      - mv docs/ doc-git/
      - |
        cd doc-git
        git add .
        git commit -m "Update doc $VERSION"
        git tag $VERSION
        git log
        git push
        git push origin --tags
    environment:
      DOC_REPOSITORY_URL:
        from_secret: DOC_REPOSITORY_URL
      SSH_KEY:
        from_secret: DOC_SSH_KEY
    depends_on: [coverage-check]
    when:
      branch: master
  - name: docker
    image: banzaicloud/drone-kaniko
    settings:
      email: kedthunder@gmail.com
      dockerfile: ./Dockerfile
      registry: docker.pkg.github.com
      repo: ked57/mspr-user-api/api
      username:
        from_secret: GITHUB_USERNAME
      password:
        from_secret: GITHUB_TOKEN
      tags:
        - ${DRONE_COMMIT_SHA:0:8}
        - latest
    environment:
      DATABASE_URL:
        from_secret: TEST_DATABASE_URL
    depends_on: [documentation]
    when:
      event: tag
  - name: deploy
    image: pabloclsn/kubectl-docker:latest
    commands:
      - echo $KUBE_CONFIG > ~/.kube/config
      - cat .kube/deployment.yaml | envsubst | kubectl apply -f -
      - kubectl rollout restart deployment/mspr-ci-user-api-deployment -n prod-mspr-ci 
    environment:
      DATABASE_URL:
        from_secret: DATABASE_URL
      KUBE_CONFIG:
        from_secret: KUBE_CONFIG
    depends_on: [docker]
    when:
      event: tag

  # - name: Semantical Versionning
  #   image: python:3.6
  #   commands:
  #     - mkdir ~/.ssh
  #     - echo $CI_SSH_KEY > ~/.ssh/id_rsa
  #     - pip install -r .semver/requirements.txt
  #     - python .semver/main.py
  #   environment:
  #     CI_REPOSITORY_URL:
  #       from_secret: CI_REPOSITORY_URL
  #     CI_SSH_KEY:
  #       from_secret: CI_SSH_KEY
  #   depends_on: [prisma_generate]
  #   when:
  #     branch:
  #     - master
  #     event: push
